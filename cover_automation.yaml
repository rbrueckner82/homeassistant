blueprint:
  name: Rollos nach Temperatur und Sonnenstand steuern
  description: Schließt Rollos bei hoher Temperatur und Sonnen-Azimut, öffnet bei niedriger Sonnen-Elevation.
  source_url: https://github.com/rbrueckner82/homeassistant/edit/main/cover_automation.yaml
  domain: automation
  input:
    cover_entity:
      name: Rollo
      selector:
        entity:
          domain: cover
    temperature_entity:
      name: Temperatursensor
      selector:
        entity:
          domain: sensor
          device_class: temperature
    temperature_threshold:
      name: Temperaturschwelle (°C)
      default: 25
      selector:
        number:
          min: 0
          max: 50
          unit_of_measurement: "°C"
    azimuth_target:
      name: Ziel-Azimut zum Schließen (°)
      default: 180
      selector:
        number:
          min: 0
          max: 360
    azimuth_tolerance:
      name: Toleranzbereich um Ziel-Azimut (±°)
      default: 10
      selector:
        number:
          min: 0
          max: 45
    elevation_threshold:
      name: Elevationsgrenze zum Öffnen (°)
      default: 5
      selector:
        number:
          min: -90
          max: 90
    position_closed:
      name: Rollo-Position bei Schließen (%)
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    position_open:
      name: Rollo-Position bei Öffnen (%)
      default: 0
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    last_open_datetime:
      name: Datum der letzten Öffnung (input_datetime)
      selector:
        entity:
          domain: input_datetime

trigger:
  - platform: time_pattern
    minutes: "/15"

condition: []

action:
  - variables:
      today: "{{ now().date() }}"
      last_open_id: !input last_open_datetime
      last_opened: "{{ states[last_open_id] | as_datetime(default=now() - timedelta(days=1)) }}"
      last_opened_date: "{{ last_opened.date() }}"
      azimuth: "{{ state_attr('sun.sun', 'azimuth') | float }}"
      az_target: !input azimuth_target
      az_tol: !input azimuth_tolerance
      azimuth_ok: "{{ azimuth >= (az_target - az_tol) and azimuth <= (az_target + az_tol) }}"

  - choose:
      # ✅ Öffnen bei niedriger Elevation
      - conditions:
          - condition: numeric_state
            entity_id: sun.sun
            attribute: elevation
            below: !input elevation_threshold
        sequence:
          - service: cover.set_cover_position
            data:
              entity_id: !input cover_entity
              position: !input position_open
          - service: input_datetime.set_datetime
            target:
              entity_id: !input last_open_datetime
            data:
              date: "{{ today }}"

      # ✅ Schließen nur, wenn heute noch nicht geöffnet wurde + Azimut passt + Temperatur überschritten
      - conditions:
          - condition: template
            value_template: "{{ today != last_opened_date }}"
          - condition: numeric_state
            entity_id: !input temperature_entity
            above: !input temperature_threshold
          - condition: template
            value_template: "{{ azimuth_ok }}"
        sequence:
          - service: cover.set_cover_position
            data:
              entity_id: !input cover_entity
              position: !input position_closed

mode: single
