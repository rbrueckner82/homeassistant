blueprint:
  name: Bewegungsmelder Licht/Switch Automation
  description: "Schaltet ein Licht oder einen Schalter basierend auf einem Bewegungsmelder ein und aus. Mit automatischer Verlängerung bei erneuter Bewegung und optionaler Zeitsteuerung."
  source_url: https://github.com/rbrueckner82/homeassistant/edit/main/light_at_motion.yaml
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      description: Motion Sensor oder eine Gruppe (alles was zwischen on/off schaltet)
      selector:
        entity:
          multiple: true
    light_target:
      name: Light or Switch
      selector:
        target:
          entity:
            domain:
              - light
              - switch
    luminance_sensor:
      name: Illuminance sensor
      description: Dieser Sensor wird zur Prüfung der Helligkeit verwendet.
      default:
      selector:
        entity:
          domain: sensor
          device_class: illuminance
          multiple: false
    luminance_required:
      name: Required Lux Level
      description: Lux-Level, unterhalb dessen die Automation aktiv wird.
      default: 100
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: lx
    no_motion_wait:
      name: Wait time
      description: Zeit in Sekunden, bis nach der letzten Bewegung wieder ausgeschaltet wird.
      default: 120
      selector:
        number:
          min: 0.0
          max: 600.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0
    time_default_start:
      name: Nur nach dieser Uhrzeit aktiv (Optional)
      default: 00:00:00
      selector:
        time: {}
    time_default_end:
      name: Nur vor dieser Uhrzeit aktiv (Optional)
      default: 00:00:00
      selector:
        time: {}
    elevation:
      name: Elevation
      description: Sonnenstand prüfen oder immer triggern
      default: Always
      selector:
        select:
          options:
            - Always
            - Below horizon
            - Above horizon
    elevation_adjustment:
      name: Sun elevation adjustment (Optional)
      default: 0
      selector:
        number:
          min: -90.0
          max: 90.0
          unit_of_measurement: degrees
          mode: slider
          step: 1.0
    automation_blocker:
      name: Automation Blocker (Optional)
      description: Nur ausführen, wenn dieser Helper im gewünschten Zustand ist
      default:
      selector:
        entity: {}
    automation_blocker_boolean:
      name: Automation Blocker Chooser (Optional)
      description: Gewünschter Zustand des Blockers
      default: false
      selector:
        boolean: {}
    motion_off_blocker:
      name: Motion Off Blocker (Optional)
      description: Ausschalt-Sequenz wird nicht ausgeführt, wenn dieser Helper im gewünschten Zustand ist
      default:
      selector:
        entity: {}
    motion_off_blocker_boolean:
      name: Motion Off Chooser (Optional)
      description: Gewünschter Zustand des Motion-Off-Blockers
      default: false
      selector:
        boolean: {}
    scene_ambient:
      name: Ambient Scene (Optional)
      description: Szene für Ambient-Zustand (wird bei keiner Bewegung aktiviert)
      default: scene.none
      selector:
        entity:
          domain:
            - scene
          multiple: false
    time_scene_ambient_start:
      name: Ambient Time Start (Optional)
      default: 00:00:00
      selector:
        time: {}
    time_scene_ambient_end:
      name: Ambient Time End (Optional)
      default: 00:00:00
      selector:
        time: {}
mode: restart
max_exceeded: silent
variables:
  scene_ambient: !input scene_ambient
  automation_blocker: !input automation_blocker
  automation_blocker_boolean: !input automation_blocker_boolean
  motion_off_blocker: !input motion_off_blocker
  motion_off_blocker_boolean: !input motion_off_blocker_boolean
  elevation: !input elevation
  elevation_adjustment: !input elevation_adjustment
  motion_entity: !input motion_entity
  luminance_sensor: !input luminance_sensor
  luminance_required: !input luminance_required
trigger:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"
  - platform: state
    entity_id: !input motion_entity
    from: "on"
    to: "off"
    for: !input no_motion_wait
condition:
  - condition: or
    conditions:
      - "{{ automation_blocker == none }}"
      - "{{ automation_blocker_boolean and states[automation_blocker].state == 'on' }}"
      - "{{ not automation_blocker_boolean and states[automation_blocker].state == 'off' }}"
  - condition: template
    value_template: >
      {% if 'Always' == elevation %}
        true
      {% else %}
      {% set sun_elevation = state_attr('sun.sun', 'elevation') %}
      {% if sun_elevation is none %}
          false
      {% else %}
        {% if (sun_elevation > elevation_adjustment and 'Above horizon' == elevation) or
              (sun_elevation <= elevation_adjustment and 'Below horizon' == elevation) %}
          true
        {% else %}
          false
        {% endif %}
      {% endif %}
      {% endif %}
action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'on' }}"
          - condition: or
            conditions:
              - "{{ luminance_sensor == none }}"
              - condition: numeric_state
                entity_id: !input luminance_sensor
                below: !input luminance_required
        sequence:
          - condition: time
            after: !input time_default_start
            before: !input time_default_end
          - service: homeassistant.turn_on
            target: !input light_target
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'off' }}"
          - condition: or
            conditions:
              - "{{ motion_off_blocker == none }}"
              - "{{ motion_off_blocker_boolean and states[motion_off_blocker].state == 'on' }}"
              - "{{ not motion_off_blocker_boolean and states[motion_off_blocker].state == 'off' }}"
        sequence:
          - choose:
              - conditions:
                  - "{{ scene_ambient != 'scene.none' }}"
                  - condition: time
                    after: !input time_scene_ambient_start
                    before: !input time_scene_ambient_end
                sequence:
                  - scene: !input scene_ambient
            default:
              - service: homeassistant.turn_off
                target: !input light_target
